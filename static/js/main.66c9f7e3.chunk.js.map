{"version":3,"sources":["../../dist/index.es.js","App.js","index.js"],"names":["__spreadArrays","s","i","il","arguments","length","r","Array","k","a","j","jl","App","_useMultiSelect","initialState","_a","Object","react","allSelected","exceptions","_b","setSelectionState","setSelected","key","value","state","filter","item","includes","toggleSelected","selectAll","deSelectAll","isSelected","getAllSelectedKeys","keys","filterFunction","getSelectionState","useMultiSelect","allSelectedKeys","names","react_default","createElement","style","display","onClick","ev","preventDefault","slice","forEach","name","map","type","checked","onChange","target","JSON","stringify","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.66c9f7e3.chunk.js","sourcesContent":["import { useState } from 'react';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n}\n\nvar useMultiSelect = function useMultiSelect(initialState) {\n  // we want to keep track of whether or not the current state is inclusive of everything or nothing\n  //    and then a list of exceptions to the rule.\n  // i.e. all items are selected, except for these five keys, or nothing is selected except these three keys\n  // so we need to keep track of:\n  //    the current state of selection\n  //    the list of exceptions\n  var _a = useState(initialState || {\n    allSelected: false,\n    exceptions: []\n  }),\n      _b = _a[0],\n      allSelected = _b.allSelected,\n      exceptions = _b.exceptions,\n      setSelectionState = _a[1]; // now we want to return a set of functions for the consumer.\n  // We need a\n  //    function to set the value of a key\n\n\n  function setSelected(key, value) {\n    // because we're updating state based on existing state, we need to use the function style updates\n    setSelectionState(function (state) {\n      // If the value we're setting too matches our default state, then just make sure\n      //    that the key is not in our exceptions list\n      if (state.allSelected === value) {\n        return {\n          allSelected: state.allSelected,\n          exceptions: state.exceptions.filter(function (item) {\n            return item !== key;\n          })\n        };\n      } else {\n        // If the item should be in the exceptions list, then add it if it's missing\n        if (!state.exceptions.includes(key)) {\n          return {\n            allSelected: state.allSelected,\n            exceptions: __spreadArrays(state.exceptions, [key])\n          };\n        }\n      }\n\n      return state;\n    });\n  } //    function to toggle the value of a key\n\n\n  function toggleSelected(key) {\n    // basically just check to see if is in the exceptions array, and invert that\n    setSelectionState(function (state) {\n      if (state.exceptions.includes(key)) {\n        return {\n          allSelected: state.allSelected,\n          exceptions: state.exceptions.filter(function (item) {\n            return item !== key;\n          })\n        };\n      } else {\n        return {\n          allSelected: state.allSelected,\n          exceptions: __spreadArrays(state.exceptions, [key])\n        };\n      }\n    });\n  } //    function for select all\n\n\n  function selectAll() {\n    setSelectionState({\n      allSelected: true,\n      exceptions: []\n    });\n  } //    function for deselect all\n\n\n  function deSelectAll() {\n    setSelectionState({\n      allSelected: false,\n      exceptions: []\n    });\n  } //    function to determine if a key is currently selected\n\n\n  function isSelected(key) {\n    if (allSelected) {\n      return !exceptions.includes(key);\n    } else {\n      return exceptions.includes(key);\n    }\n  } //    function to return all of the selected keys, given a list of keys\n\n\n  function getAllSelectedKeys(keys) {\n    var filterFunction = allSelected ? function (item) {\n      return !exceptions.includes(item);\n    } : function (item) {\n      return exceptions.includes(item);\n    };\n    return keys.filter(filterFunction);\n  } // would also be nice to have a way to return the actual definition for lazy loaders\n\n\n  function getSelectionState() {\n    return {\n      allSelected: allSelected,\n      exceptions: exceptions\n    };\n  }\n\n  return {\n    setSelected: setSelected,\n    toggleSelected: toggleSelected,\n    selectAll: selectAll,\n    deSelectAll: deSelectAll,\n    isSelected: isSelected,\n    getAllSelectedKeys: getAllSelectedKeys,\n    getSelectionState: getSelectionState\n  };\n};\n\nexport { useMultiSelect };","import React from \"react\";\n\nimport { useMultiSelect } from \"use-multiselect\";\n\nconst App = () => {\n  const {\n    getAllSelectedKeys,\n    isSelected,\n    setSelected,\n    toggleSelected,\n    selectAll,\n    deSelectAll,\n    getSelectionState\n  } = useMultiSelect({ allSelected: true, exceptions: [\"Jayson\"] });\n  // setup a small array of checkboxes\n  let allSelectedKeys = getAllSelectedKeys(names);\n  let state = getSelectionState();\n  return (\n    <div style={{ display: \"flex\" }}>\n      <div>\n        <form>\n          <button\n            onClick={ev => {\n              ev.preventDefault();\n              selectAll();\n            }}\n          >\n            Select all\n          </button>\n          <button\n            onClick={ev => {\n              ev.preventDefault();\n              deSelectAll();\n            }}\n          >\n            Select none\n          </button>\n          <button\n            onClick={ev => {\n              ev.preventDefault();\n              names.slice(0, 3).forEach(name => setSelected(name, true));\n            }}\n          >\n            Select Top 3\n          </button>\n          <button\n            onClick={ev => {\n              ev.preventDefault();\n              names.slice(0, 3).forEach(name => toggleSelected(name, true));\n            }}\n          >\n            Toggle Top 3\n          </button>\n          {names.map(name => {\n            return (\n              <div key={name}>\n                <label>\n                  {name}\n                  <input\n                    type=\"checkbox\"\n                    name={name}\n                    checked={isSelected(name)}\n                    onChange={ev => setSelected(name, ev.target.checked)}\n                  />\n                </label>\n              </div>\n            );\n          })}\n        </form>\n      </div>\n      <div>\n        {allSelectedKeys.map(key => {\n          return <div key={key}>{key}</div>;\n        })}\n      </div>\n      <div>{JSON.stringify(state)}</div>\n    </div>\n  );\n};\nexport default App;\nlet names = [\n  \"Chance\",\n  \"Drusi\",\n  \"Nicolis\",\n  \"Lurlene\",\n  \"Tarra\",\n  \"Johnathon\",\n  \"Hanna\",\n  \"Valentina\",\n  \"Vittoria\",\n  \"Melany\",\n  \"Erena\",\n  \"Jayson\",\n  \"Stacee\",\n  \"Dominga\",\n  \"Broddie\",\n  \"Arden\",\n  \"Rolando\",\n  \"Den\",\n  \"Juana\",\n  \"Doti\",\n  \"Reagan\",\n  \"Georg\",\n  \"Monroe\",\n  \"Josefina\",\n  \"Joby\",\n  \"Timmi\",\n  \"Mehetabel\",\n  \"Danie\",\n  \"Sybyl\"\n];\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}