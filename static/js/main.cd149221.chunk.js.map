{"version":3,"sources":["../../dist/index.es.js","standalone.js","providerBased.js","App.js","index.js"],"names":["_assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","initialState","_a","isMultiSelectActive","allSelected","exceptions","_b","setSelectionState","setSelected","key","value","state","toggleSelected","selectAll","deSelectAll","isSelected","getAllSelectedKeys","keys","filterFunction","item","filter","getSelectionState","setMultiSelectActive","val","MultiSelectContext","_key","_value","props","initialValue","Provider","children","Standalone","useMultiSelect","allSelectedKeys","names","style","display","onClick","ev","preventDefault","disabled","slice","forEach","name","map","type","checked","onChange","target","JSON","stringify","ProviderConsumer","ProviderWrapper","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd149221.chunk.js","sourcesContent":["import { useState, createContext, createElement, useContext } from 'react';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n\nvar useMultiSelect = function useMultiSelect(initialState) {\n  // Whether or not the multiSelect mode is currently active. This is just here as a convenience.\n  // You can handle this on your own if desired.\n  // we want to keep track of whether or not the current state is inclusive of everything or nothing\n  //    and then a list of exceptions to the rule.\n  // i.e. all items are selected, except for these five keys, or nothing is selected except these three keys\n  // so we need to keep track of:\n  //    the current state of selection\n  //    the list of exceptions\n  var _a = useState(initialState || {\n    isMultiSelectActive: false,\n    allSelected: false,\n    exceptions: {}\n  }),\n      _b = _a[0],\n      allSelected = _b.allSelected,\n      exceptions = _b.exceptions,\n      isMultiSelectActive = _b.isMultiSelectActive,\n      setSelectionState = _a[1]; // now we want to return a set of functions for the consumer.\n\n\n  function setMultiSelectActive(val) {\n    setSelectionState(function (state) {\n      return _assign(_assign({}, state), {\n        isMultiSelectActive: val\n      });\n    });\n  } // We need a\n  //    function to set the value of a key\n\n\n  function setSelected(key, value) {\n    // because we're updating state based on existing state, we need to use the function style updates\n    setSelectionState(function (state) {\n      var _a, _b; // If the value we're setting too matches our default state, then just make sure\n      //    that the key is not in our exceptions list\n\n\n      if (state.allSelected === value) {\n        return {\n          isMultiSelectActive: state.isMultiSelectActive,\n          allSelected: state.allSelected,\n          exceptions: _assign(_assign({}, state.exceptions), (_a = {}, _a[key] = false, _a))\n        };\n      } else {\n        // If the item should be in the exceptions list, then add it if it's missing\n        if (!state.exceptions[key]) {\n          return {\n            isMultiSelectActive: state.isMultiSelectActive,\n            allSelected: state.allSelected,\n            exceptions: _assign(_assign({}, state.exceptions), (_b = {}, _b[key] = true, _b))\n          };\n        }\n      }\n\n      return state;\n    });\n  } //    function to toggle the value of a key\n\n\n  function toggleSelected(key) {\n    // basically just check to see if is in the exceptions array, and invert that\n    setSelectionState(function (state) {\n      var _a, _b;\n\n      if (state.exceptions[key]) {\n        return {\n          isMultiSelectActive: state.isMultiSelectActive,\n          allSelected: state.allSelected,\n          exceptions: _assign(_assign({}, state.exceptions), (_a = {}, _a[key] = !state.exceptions[key], _a))\n        };\n      } else {\n        return {\n          isMultiSelectActive: state.isMultiSelectActive,\n          allSelected: state.allSelected,\n          exceptions: _assign(_assign({}, state.exceptions), (_b = {}, _b[key] = true, _b))\n        };\n      }\n    });\n  } //    function for select all\n\n\n  function selectAll() {\n    setSelectionState(function (state) {\n      return {\n        isMultiSelectActive: state.isMultiSelectActive,\n        allSelected: true,\n        exceptions: {}\n      };\n    });\n  } //    function for deselect all\n\n\n  function deSelectAll() {\n    setSelectionState(function (state) {\n      return {\n        isMultiSelectActive: state.isMultiSelectActive,\n        allSelected: false,\n        exceptions: {}\n      };\n    });\n  } //    function to determine if a key is currently selected\n\n\n  function isSelected(key) {\n    if (allSelected) {\n      return !exceptions[key];\n    } else {\n      return !!exceptions[key];\n    }\n  } //    function to return all of the selected keys, given a list of keys\n\n\n  function getAllSelectedKeys(keys) {\n    var filterFunction = allSelected ? function (item) {\n      return !exceptions[item];\n    } : function (item) {\n      return exceptions[item];\n    };\n    return keys.filter(filterFunction);\n  } // would also be nice to have a way to return the actual definition for lazy loaders\n\n\n  function getSelectionState() {\n    return {\n      allSelected: allSelected,\n      exceptions: exceptions\n    };\n  }\n\n  return {\n    setSelected: setSelected,\n    toggleSelected: toggleSelected,\n    selectAll: selectAll,\n    deSelectAll: deSelectAll,\n    isSelected: isSelected,\n    getAllSelectedKeys: getAllSelectedKeys,\n    getSelectionState: getSelectionState,\n    isMultiSelectActive: isMultiSelectActive,\n    setMultiSelectActive: setMultiSelectActive\n  };\n};\n\nvar MultiSelectContext = createContext({\n  deSelectAll: function deSelectAll() {},\n  selectAll: function selectAll() {},\n  getAllSelectedKeys: function getAllSelectedKeys() {\n    return [];\n  },\n  getSelectionState: function getSelectionState() {\n    return {\n      allSelected: false,\n      exceptions: {}\n    };\n  },\n  isMultiSelectActive: false,\n  isSelected: function isSelected(_key) {\n    return false;\n  },\n  setMultiSelectActive: function setMultiSelectActive() {},\n  setSelected: function setSelected(_key, _value) {},\n  toggleSelected: function toggleSelected(_key) {}\n});\n\nvar MultiSelectContextProvider = function MultiSelectContextProvider(props) {\n  var value = useMultiSelect(props.initialValue);\n  return createElement(MultiSelectContext.Provider, {\n    value: value\n  }, props.children);\n};\n\nvar useMultiSelectWithProvider = function useMultiSelectWithProvider() {\n  return useContext(MultiSelectContext);\n};\n\nexport { MultiSelectContextProvider, useMultiSelect, useMultiSelectWithProvider };","import React from \"react\";\n\nimport { useMultiSelect } from \"use-multiselect\";\n\nconst Standalone = () => {\n  const {\n    getAllSelectedKeys,\n    isSelected,\n    setSelected,\n    toggleSelected,\n    selectAll,\n    deSelectAll,\n    getSelectionState,\n    isMultiSelectActive,\n    setMultiSelectActive\n  } = useMultiSelect({ allSelected: true, exceptions: [\"Jayson\"] });\n  // setup a small array of checkboxes\n  let allSelectedKeys = getAllSelectedKeys(names);\n  let state = getSelectionState();\n  return (\n    <div style={{ display: \"flex\" }}>\n      <div>\n        <form>\n          <button\n            onClick={ev => {\n              ev.preventDefault();\n              setMultiSelectActive(!isMultiSelectActive);\n            }}\n          >\n            Toggle MultiSelect Active\n          </button>\n          <button\n            disabled={!isMultiSelectActive}\n            onClick={ev => {\n              ev.preventDefault();\n              selectAll();\n            }}\n          >\n            Select all\n          </button>\n          <button\n            disabled={!isMultiSelectActive}\n            onClick={ev => {\n              ev.preventDefault();\n              deSelectAll();\n            }}\n          >\n            Select none\n          </button>\n          <button\n            disabled={!isMultiSelectActive}\n            onClick={ev => {\n              ev.preventDefault();\n              names.slice(0, 3).forEach(name => setSelected(name, true));\n            }}\n          >\n            Select Top 3\n          </button>\n          <button\n            disabled={!isMultiSelectActive}\n            onClick={ev => {\n              ev.preventDefault();\n              names.slice(0, 3).forEach(name => toggleSelected(name, true));\n            }}\n          >\n            Toggle Top 3\n          </button>\n          {names.map(name => {\n            return (\n              <div key={name}>\n                <label>\n                  {name}\n\n                  {isMultiSelectActive && (\n                    <input\n                      type=\"checkbox\"\n                      name={name}\n                      checked={isSelected(name)}\n                      onChange={ev => setSelected(name, ev.target.checked)}\n                    />\n                  )}\n                </label>\n              </div>\n            );\n          })}\n        </form>\n      </div>\n      <div>\n        {allSelectedKeys.map(key => {\n          return <div key={key}>{key}</div>;\n        })}\n      </div>\n      <div>{JSON.stringify(state)}</div>\n    </div>\n  );\n};\nexport default Standalone;\nlet names = [\n  \"Chance\",\n  \"Drusi\",\n  \"Nicolis\",\n  \"Lurlene\",\n  \"Tarra\",\n  \"Johnathon\",\n  \"Hanna\",\n  \"Valentina\",\n  \"Vittoria\",\n  \"Melany\",\n  \"Erena\",\n  \"Jayson\",\n  \"Stacee\",\n  \"Dominga\",\n  \"Broddie\",\n  \"Arden\",\n  \"Rolando\",\n  \"Den\",\n  \"Juana\",\n  \"Doti\",\n  \"Reagan\",\n  \"Georg\",\n  \"Monroe\",\n  \"Josefina\",\n  \"Joby\",\n  \"Timmi\",\n  \"Mehetabel\",\n  \"Danie\",\n  \"Sybyl\"\n];\n","import React from \"react\";\n\nimport {\n  useMultiSelectWithProvider,\n  MultiSelectContextProvider\n} from \"use-multiselect\";\nconst ProviderWrapper = () => {\n  return (\n    <MultiSelectContextProvider>\n      <div>\n        Other stuff in here\n        <ProviderConsumer />\n      </div>\n    </MultiSelectContextProvider>\n  );\n};\nconst ProviderConsumer = () => {\n  const {\n    getAllSelectedKeys,\n    isSelected,\n    setSelected,\n    toggleSelected,\n    selectAll,\n    deSelectAll,\n    getSelectionState,\n    isMultiSelectActive,\n    setMultiSelectActive\n  } = useMultiSelectWithProvider();\n  // setup a small array of checkboxes\n  let allSelectedKeys = getAllSelectedKeys(names);\n  let state = getSelectionState();\n  return (\n    <div style={{ display: \"flex\" }}>\n      <div>\n        <form>\n          <button\n            onClick={ev => {\n              ev.preventDefault();\n              setMultiSelectActive(!isMultiSelectActive);\n            }}\n          >\n            Toggle MultiSelect Active\n          </button>\n          <button\n            disabled={!isMultiSelectActive}\n            onClick={ev => {\n              ev.preventDefault();\n              selectAll();\n            }}\n          >\n            Select all\n          </button>\n          <button\n            disabled={!isMultiSelectActive}\n            onClick={ev => {\n              ev.preventDefault();\n              deSelectAll();\n            }}\n          >\n            Select none\n          </button>\n          <button\n            disabled={!isMultiSelectActive}\n            onClick={ev => {\n              ev.preventDefault();\n              names.slice(0, 3).forEach(name => setSelected(name, true));\n            }}\n          >\n            Select Top 3\n          </button>\n          <button\n            disabled={!isMultiSelectActive}\n            onClick={ev => {\n              ev.preventDefault();\n              names.slice(0, 3).forEach(name => toggleSelected(name, true));\n            }}\n          >\n            Toggle Top 3\n          </button>\n          {names.map(name => {\n            return (\n              <div key={name}>\n                <label>\n                  {name}\n\n                  {isMultiSelectActive && (\n                    <input\n                      type=\"checkbox\"\n                      name={name}\n                      checked={isSelected(name)}\n                      onChange={ev => setSelected(name, ev.target.checked)}\n                    />\n                  )}\n                </label>\n              </div>\n            );\n          })}\n        </form>\n      </div>\n      <div>\n        {allSelectedKeys.map(key => {\n          return <div key={key}>{key}</div>;\n        })}\n      </div>\n      <div>{JSON.stringify(state)}</div>\n    </div>\n  );\n};\nexport default ProviderWrapper;\nlet names = [\n  \"Chance\",\n  \"Drusi\",\n  \"Nicolis\",\n  \"Lurlene\",\n  \"Tarra\",\n  \"Johnathon\",\n  \"Hanna\",\n  \"Valentina\",\n  \"Vittoria\",\n  \"Melany\",\n  \"Erena\",\n  \"Jayson\",\n  \"Stacee\",\n  \"Dominga\",\n  \"Broddie\",\n  \"Arden\",\n  \"Rolando\",\n  \"Den\",\n  \"Juana\",\n  \"Doti\",\n  \"Reagan\",\n  \"Georg\",\n  \"Monroe\",\n  \"Josefina\",\n  \"Joby\",\n  \"Timmi\",\n  \"Mehetabel\",\n  \"Danie\",\n  \"Sybyl\"\n];\n","import React from \"react\";\n\nimport Standalone from \"./standalone\";\nimport ProviderBased from \"./providerBased\";\n\nconst App = () => {\n  return (\n    <>\n      <ProviderBased />\n      <Standalone />\n    </>\n  );\n};\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}